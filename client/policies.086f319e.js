import { S as SvelteComponent, i as init, s as safe_not_equal, a as space, e as element, t as text, q as query_selector_all, d as detach, c as claim_space, b as claim_element, f as children, g as claim_text, h as attr, j as insert, k as append, n as noop } from './client.b2acbeeb.js';

/* src/routes/policies.svelte generated by Svelte v3.23.2 */

function create_fragment(ctx) {
	let t0;
	let h20;
	let t1;
	let t2;
	let p0;
	let t3;
	let t4;
	let p1;
	let t5;
	let t6;
	let p2;
	let t7;
	let t8;
	let hr0;
	let t9;
	let h21;
	let t10;
	let t11;
	let p3;
	let t12;
	let t13;
	let p4;
	let t14;
	let t15;
	let p5;
	let t16;
	let a0;
	let t17;
	let t18;
	let t19;
	let p6;
	let t20;
	let t21;
	let p7;
	let t22;
	let t23;
	let p8;
	let t24;
	let t25;
	let p9;
	let t26;
	let t27;
	let p10;
	let t28;
	let t29;
	let p11;
	let t30;
	let t31;
	let hr1;
	let t32;
	let h22;
	let t33;
	let t34;
	let p12;
	let t35;
	let t36;
	let p13;
	let t37;
	let t38;
	let p14;
	let t39;
	let a1;
	let t40;
	let t41;
	let t42;
	let hr2;
	let t43;
	let h23;
	let t44;
	let t45;
	let p15;
	let t46;
	let br0;
	let t47;
	let br1;
	let t48;
	let t49;
	let p16;
	let t50;
	let a2;
	let t51;
	let t52;
	let t53;
	let hr3;
	let t54;
	let h24;
	let t55;
	let t56;
	let p17;
	let t57;
	let t58;
	let p18;
	let t59;
	let a3;
	let t60;
	let t61;
	let a4;
	let t62;
	let t63;
	let t64;
	let hr4;
	let t65;
	let h25;
	let t66;
	let t67;
	let p19;
	let t68;
	let t69;
	let img0;
	let img0_src_value;
	let t70;
	let img1;
	let img1_src_value;
	let t71;
	let img2;
	let img2_src_value;
	let t72;
	let img3;
	let img3_src_value;
	let t73;
	let img4;
	let img4_src_value;
	let t74;
	let p20;
	let t75;
	let a5;
	let t76;
	let t77;
	let t78;
	let br2;

	return {
		c() {
			t0 = space();
			h20 = element("h2");
			t1 = text("Copyright");
			t2 = space();
			p0 = element("p");
			t3 = text("Website © Copyright 2019, Jonathan Marsh.");
			t4 = space();
			p1 = element("p");
			t5 = text("All rights reserved.");
			t6 = space();
			p2 = element("p");
			t7 = text("See license infomation in each repository for exemptions and further information.");
			t8 = space();
			hr0 = element("hr");
			t9 = space();
			h21 = element("h2");
			t10 = text("Privacy/Cookie policy");
			t11 = space();
			p3 = element("p");
			t12 = text("I do not directly use any cookies whatsoever, be it for tracking, functional purposes, or otherwise.");
			t13 = space();
			p4 = element("p");
			t14 = text("Any cookies set or fetched on this website belong to 3rd party sources.");
			t15 = space();
			p5 = element("p");
			t16 = text("For example, some project captions use ");
			a0 = element("a");
			t17 = text("shields.io");
			t18 = text(" images and, like most Content Delivery Networks, shields.io use a DDOS protection service like Cloud Flare.");
			t19 = space();
			p6 = element("p");
			t20 = text("Cloud Flare sets a cookie called \"__cfduid\" which is used for tracking.");
			t21 = space();
			p7 = element("p");
			t22 = text("I cannot control this.");
			t23 = space();
			p8 = element("p");
			t24 = text("To opt out from this, I recommend blocking all cookies on the jonmarsh.dev domain.");
			t25 = space();
			p9 = element("p");
			t26 = text("As there are many web browsers out there, I cannot possibly give instructions for all of them.");
			t27 = space();
			p10 = element("p");
			t28 = text("So, please refer to the manual/help section of your web browser or simply search online for how to disable cookies.");
			t29 = space();
			p11 = element("p");
			t30 = text("Thank you.");
			t31 = space();
			hr1 = element("hr");
			t32 = space();
			h22 = element("h2");
			t33 = text("LinkedIn");
			t34 = space();
			p12 = element("p");
			t35 = text("LinkedIn, the LinkedIn logo, the IN logo and InMail are registered trademarks or trademarks of LinkedIn Corporation and its affiliates in the United States and/or other countries.");
			t36 = space();
			p13 = element("p");
			t37 = text("LINKEDIN DISCLAIMS ANY WARRANTIES THAT MAY BE EXPRESS OR IMPLIED BY LAW REGARDING THE LINKEDIN MARKS (TO THE EXTENT PERMITTED BY LAW), INCLUDING WARRANTIES AGAINST INFRINGEMENT.");
			t38 = space();
			p14 = element("p");
			t39 = text("You, the visitor, must not obtain the LinkedIn logo from jonmarsh.dev, please follow the ");
			a1 = element("a");
			t40 = text("LinkedIn's branding policy");
			t41 = text(" that is relevant for you.");
			t42 = space();
			hr2 = element("hr");
			t43 = space();
			h23 = element("h2");
			t44 = text("GitHub");
			t45 = space();
			p15 = element("p");
			t46 = text("GITHUB®, the GITHUB® logo design, OCTOCAT® and the OCTOCAT® logo design are exclusive trademarks registered in the United States by GitHub, Inc.");
			br0 = element("br");
			t47 = text("\nThe OCTOCAT design is the exclusive property of GitHub, Inc and has been federally registered with the United States Copyright Office. All rights reserved.");
			br1 = element("br");
			t48 = text("\nNo adaptation or use of any kind of any of our registered trademarks or copyrights, or any other contents of this website, is allowed without the express written permission of GitHub, Inc.");
			t49 = space();
			p16 = element("p");
			t50 = text("You, the visitor, must not obtain the GitHub logo from jonmarsh.dev, please refer to ");
			a2 = element("a");
			t51 = text("GitHub's branding policies");
			t52 = text(".");
			t53 = space();
			hr3 = element("hr");
			t54 = space();
			h24 = element("h2");
			t55 = text("StackOverflow");
			t56 = space();
			p17 = element("p");
			t57 = text("The Stack Exchange name and logos are trademarks of Stack Exchange Inc. The names and logos for sites and products operating on the Stack Exchange network are also trademarks of Stack Exchange Inc.");
			t58 = space();
			p18 = element("p");
			t59 = text("You, the visitor, must not obtain the StackOverflow logo from jonmarsh.dev, please refer to ");
			a3 = element("a");
			t60 = text("StackOverflow's branding policies");
			t61 = text(" which permits use of ");
			a4 = element("a");
			t62 = text("StackOverflow's logos");
			t63 = text(".");
			t64 = space();
			hr4 = element("hr");
			t65 = space();
			h25 = element("h2");
			t66 = text("OpenEmoji");
			t67 = space();
			p19 = element("p");
			t68 = text("The emojis used below were designed by OpenMoji. No changes made. License: CC BY-SA 4.0");
			t69 = space();
			img0 = element("img");
			t70 = space();
			img1 = element("img");
			t71 = space();
			img2 = element("img");
			t72 = space();
			img3 = element("img");
			t73 = space();
			img4 = element("img");
			t74 = space();
			p20 = element("p");
			t75 = text("You, the visitor, must not obtain any of OpenMoji's emojis from jonmarsh.dev, please refer to ");
			a5 = element("a");
			t76 = text("OpenMoji's website");
			t77 = text(" to acquire your own copy.");
			t78 = space();
			br2 = element("br");
			this.h();
		},
		l(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1pfuqkv\"]", document.head);
			head_nodes.forEach(detach);
			t0 = claim_space(nodes);
			h20 = claim_element(nodes, "H2", {});
			var h20_nodes = children(h20);
			t1 = claim_text(h20_nodes, "Copyright");
			h20_nodes.forEach(detach);
			t2 = claim_space(nodes);
			p0 = claim_element(nodes, "P", {});
			var p0_nodes = children(p0);
			t3 = claim_text(p0_nodes, "Website © Copyright 2019, Jonathan Marsh.");
			p0_nodes.forEach(detach);
			t4 = claim_space(nodes);
			p1 = claim_element(nodes, "P", {});
			var p1_nodes = children(p1);
			t5 = claim_text(p1_nodes, "All rights reserved.");
			p1_nodes.forEach(detach);
			t6 = claim_space(nodes);
			p2 = claim_element(nodes, "P", {});
			var p2_nodes = children(p2);
			t7 = claim_text(p2_nodes, "See license infomation in each repository for exemptions and further information.");
			p2_nodes.forEach(detach);
			t8 = claim_space(nodes);
			hr0 = claim_element(nodes, "HR", {});
			t9 = claim_space(nodes);
			h21 = claim_element(nodes, "H2", {});
			var h21_nodes = children(h21);
			t10 = claim_text(h21_nodes, "Privacy/Cookie policy");
			h21_nodes.forEach(detach);
			t11 = claim_space(nodes);
			p3 = claim_element(nodes, "P", {});
			var p3_nodes = children(p3);
			t12 = claim_text(p3_nodes, "I do not directly use any cookies whatsoever, be it for tracking, functional purposes, or otherwise.");
			p3_nodes.forEach(detach);
			t13 = claim_space(nodes);
			p4 = claim_element(nodes, "P", {});
			var p4_nodes = children(p4);
			t14 = claim_text(p4_nodes, "Any cookies set or fetched on this website belong to 3rd party sources.");
			p4_nodes.forEach(detach);
			t15 = claim_space(nodes);
			p5 = claim_element(nodes, "P", {});
			var p5_nodes = children(p5);
			t16 = claim_text(p5_nodes, "For example, some project captions use ");
			a0 = claim_element(p5_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			t17 = claim_text(a0_nodes, "shields.io");
			a0_nodes.forEach(detach);
			t18 = claim_text(p5_nodes, " images and, like most Content Delivery Networks, shields.io use a DDOS protection service like Cloud Flare.");
			p5_nodes.forEach(detach);
			t19 = claim_space(nodes);
			p6 = claim_element(nodes, "P", {});
			var p6_nodes = children(p6);
			t20 = claim_text(p6_nodes, "Cloud Flare sets a cookie called \"__cfduid\" which is used for tracking.");
			p6_nodes.forEach(detach);
			t21 = claim_space(nodes);
			p7 = claim_element(nodes, "P", {});
			var p7_nodes = children(p7);
			t22 = claim_text(p7_nodes, "I cannot control this.");
			p7_nodes.forEach(detach);
			t23 = claim_space(nodes);
			p8 = claim_element(nodes, "P", {});
			var p8_nodes = children(p8);
			t24 = claim_text(p8_nodes, "To opt out from this, I recommend blocking all cookies on the jonmarsh.dev domain.");
			p8_nodes.forEach(detach);
			t25 = claim_space(nodes);
			p9 = claim_element(nodes, "P", {});
			var p9_nodes = children(p9);
			t26 = claim_text(p9_nodes, "As there are many web browsers out there, I cannot possibly give instructions for all of them.");
			p9_nodes.forEach(detach);
			t27 = claim_space(nodes);
			p10 = claim_element(nodes, "P", {});
			var p10_nodes = children(p10);
			t28 = claim_text(p10_nodes, "So, please refer to the manual/help section of your web browser or simply search online for how to disable cookies.");
			p10_nodes.forEach(detach);
			t29 = claim_space(nodes);
			p11 = claim_element(nodes, "P", {});
			var p11_nodes = children(p11);
			t30 = claim_text(p11_nodes, "Thank you.");
			p11_nodes.forEach(detach);
			t31 = claim_space(nodes);
			hr1 = claim_element(nodes, "HR", {});
			t32 = claim_space(nodes);
			h22 = claim_element(nodes, "H2", {});
			var h22_nodes = children(h22);
			t33 = claim_text(h22_nodes, "LinkedIn");
			h22_nodes.forEach(detach);
			t34 = claim_space(nodes);
			p12 = claim_element(nodes, "P", {});
			var p12_nodes = children(p12);
			t35 = claim_text(p12_nodes, "LinkedIn, the LinkedIn logo, the IN logo and InMail are registered trademarks or trademarks of LinkedIn Corporation and its affiliates in the United States and/or other countries.");
			p12_nodes.forEach(detach);
			t36 = claim_space(nodes);
			p13 = claim_element(nodes, "P", {});
			var p13_nodes = children(p13);
			t37 = claim_text(p13_nodes, "LINKEDIN DISCLAIMS ANY WARRANTIES THAT MAY BE EXPRESS OR IMPLIED BY LAW REGARDING THE LINKEDIN MARKS (TO THE EXTENT PERMITTED BY LAW), INCLUDING WARRANTIES AGAINST INFRINGEMENT.");
			p13_nodes.forEach(detach);
			t38 = claim_space(nodes);
			p14 = claim_element(nodes, "P", {});
			var p14_nodes = children(p14);
			t39 = claim_text(p14_nodes, "You, the visitor, must not obtain the LinkedIn logo from jonmarsh.dev, please follow the ");
			a1 = claim_element(p14_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);
			t40 = claim_text(a1_nodes, "LinkedIn's branding policy");
			a1_nodes.forEach(detach);
			t41 = claim_text(p14_nodes, " that is relevant for you.");
			p14_nodes.forEach(detach);
			t42 = claim_space(nodes);
			hr2 = claim_element(nodes, "HR", {});
			t43 = claim_space(nodes);
			h23 = claim_element(nodes, "H2", {});
			var h23_nodes = children(h23);
			t44 = claim_text(h23_nodes, "GitHub");
			h23_nodes.forEach(detach);
			t45 = claim_space(nodes);
			p15 = claim_element(nodes, "P", {});
			var p15_nodes = children(p15);
			t46 = claim_text(p15_nodes, "GITHUB®, the GITHUB® logo design, OCTOCAT® and the OCTOCAT® logo design are exclusive trademarks registered in the United States by GitHub, Inc.");
			br0 = claim_element(p15_nodes, "BR", {});
			t47 = claim_text(p15_nodes, "\nThe OCTOCAT design is the exclusive property of GitHub, Inc and has been federally registered with the United States Copyright Office. All rights reserved.");
			br1 = claim_element(p15_nodes, "BR", {});
			t48 = claim_text(p15_nodes, "\nNo adaptation or use of any kind of any of our registered trademarks or copyrights, or any other contents of this website, is allowed without the express written permission of GitHub, Inc.");
			p15_nodes.forEach(detach);
			t49 = claim_space(nodes);
			p16 = claim_element(nodes, "P", {});
			var p16_nodes = children(p16);
			t50 = claim_text(p16_nodes, "You, the visitor, must not obtain the GitHub logo from jonmarsh.dev, please refer to ");
			a2 = claim_element(p16_nodes, "A", { href: true, class: true });
			var a2_nodes = children(a2);
			t51 = claim_text(a2_nodes, "GitHub's branding policies");
			a2_nodes.forEach(detach);
			t52 = claim_text(p16_nodes, ".");
			p16_nodes.forEach(detach);
			t53 = claim_space(nodes);
			hr3 = claim_element(nodes, "HR", {});
			t54 = claim_space(nodes);
			h24 = claim_element(nodes, "H2", {});
			var h24_nodes = children(h24);
			t55 = claim_text(h24_nodes, "StackOverflow");
			h24_nodes.forEach(detach);
			t56 = claim_space(nodes);
			p17 = claim_element(nodes, "P", {});
			var p17_nodes = children(p17);
			t57 = claim_text(p17_nodes, "The Stack Exchange name and logos are trademarks of Stack Exchange Inc. The names and logos for sites and products operating on the Stack Exchange network are also trademarks of Stack Exchange Inc.");
			p17_nodes.forEach(detach);
			t58 = claim_space(nodes);
			p18 = claim_element(nodes, "P", {});
			var p18_nodes = children(p18);
			t59 = claim_text(p18_nodes, "You, the visitor, must not obtain the StackOverflow logo from jonmarsh.dev, please refer to ");
			a3 = claim_element(p18_nodes, "A", { href: true, class: true });
			var a3_nodes = children(a3);
			t60 = claim_text(a3_nodes, "StackOverflow's branding policies");
			a3_nodes.forEach(detach);
			t61 = claim_text(p18_nodes, " which permits use of ");
			a4 = claim_element(p18_nodes, "A", { href: true, class: true });
			var a4_nodes = children(a4);
			t62 = claim_text(a4_nodes, "StackOverflow's logos");
			a4_nodes.forEach(detach);
			t63 = claim_text(p18_nodes, ".");
			p18_nodes.forEach(detach);
			t64 = claim_space(nodes);
			hr4 = claim_element(nodes, "HR", {});
			t65 = claim_space(nodes);
			h25 = claim_element(nodes, "H2", {});
			var h25_nodes = children(h25);
			t66 = claim_text(h25_nodes, "OpenEmoji");
			h25_nodes.forEach(detach);
			t67 = claim_space(nodes);
			p19 = claim_element(nodes, "P", {});
			var p19_nodes = children(p19);
			t68 = claim_text(p19_nodes, "The emojis used below were designed by OpenMoji. No changes made. License: CC BY-SA 4.0");
			p19_nodes.forEach(detach);
			t69 = claim_space(nodes);
			img0 = claim_element(nodes, "IMG", { src: true, alt: true, class: true });
			t70 = claim_space(nodes);
			img1 = claim_element(nodes, "IMG", { src: true, alt: true, class: true });
			t71 = claim_space(nodes);
			img2 = claim_element(nodes, "IMG", { src: true, alt: true, class: true });
			t72 = claim_space(nodes);
			img3 = claim_element(nodes, "IMG", { src: true, alt: true, class: true });
			t73 = claim_space(nodes);
			img4 = claim_element(nodes, "IMG", { src: true, alt: true, class: true });
			t74 = claim_space(nodes);
			p20 = claim_element(nodes, "P", {});
			var p20_nodes = children(p20);
			t75 = claim_text(p20_nodes, "You, the visitor, must not obtain any of OpenMoji's emojis from jonmarsh.dev, please refer to ");
			a5 = claim_element(p20_nodes, "A", { href: true, class: true });
			var a5_nodes = children(a5);
			t76 = claim_text(a5_nodes, "OpenMoji's website");
			a5_nodes.forEach(detach);
			t77 = claim_text(p20_nodes, " to acquire your own copy.");
			p20_nodes.forEach(detach);
			t78 = claim_space(nodes);
			br2 = claim_element(nodes, "BR", {});
			this.h();
		},
		h() {
			document.title = "Jonathan Marsh - Policies";
			attr(a0, "href", "https://shields.io/");
			attr(a0, "class", "svelte-yxdqyz");
			attr(a1, "href", "https://brand.linkedin.com/policies");
			attr(a1, "class", "svelte-yxdqyz");
			attr(a2, "href", "https://github.com/logos");
			attr(a2, "class", "svelte-yxdqyz");
			attr(a3, "href", "https://stackoverflow.com/legal/trademark-guidance");
			attr(a3, "class", "svelte-yxdqyz");
			attr(a4, "href", "https://stackoverflow.com/company/logos");
			attr(a4, "class", "svelte-yxdqyz");
			if (img0.src !== (img0_src_value = "images/openmoji/E0A9.svg")) attr(img0, "src", img0_src_value);
			attr(img0, "alt", "Emoji of a red location indicator");
			attr(img0, "class", "svelte-yxdqyz");
			if (img1.src !== (img1_src_value = "images/openmoji/1F393.svg")) attr(img1, "src", img1_src_value);
			attr(img1, "alt", "Emoji of a graduation cap");
			attr(img1, "class", "svelte-yxdqyz");
			if (img2.src !== (img2_src_value = "images/openmoji/1F50D.svg")) attr(img2, "src", img2_src_value);
			attr(img2, "alt", "Emoji of a magnifying glass");
			attr(img2, "class", "svelte-yxdqyz");
			if (img3.src !== (img3_src_value = "images/openmoji/E24E.svg")) attr(img3, "src", img3_src_value);
			attr(img3, "alt", "Emoji of a close icon (close navigation menu)");
			attr(img3, "class", "svelte-yxdqyz");
			if (img4.src !== (img4_src_value = "images/openmoji/E250.svg")) attr(img4, "src", img4_src_value);
			attr(img4, "alt", "Emoji of a hamburger icon (open navigation menu)");
			attr(img4, "class", "svelte-yxdqyz");
			attr(a5, "href", "https://openmoji.org/");
			attr(a5, "class", "svelte-yxdqyz");
		},
		m(target, anchor) {
			insert(target, t0, anchor);
			insert(target, h20, anchor);
			append(h20, t1);
			insert(target, t2, anchor);
			insert(target, p0, anchor);
			append(p0, t3);
			insert(target, t4, anchor);
			insert(target, p1, anchor);
			append(p1, t5);
			insert(target, t6, anchor);
			insert(target, p2, anchor);
			append(p2, t7);
			insert(target, t8, anchor);
			insert(target, hr0, anchor);
			insert(target, t9, anchor);
			insert(target, h21, anchor);
			append(h21, t10);
			insert(target, t11, anchor);
			insert(target, p3, anchor);
			append(p3, t12);
			insert(target, t13, anchor);
			insert(target, p4, anchor);
			append(p4, t14);
			insert(target, t15, anchor);
			insert(target, p5, anchor);
			append(p5, t16);
			append(p5, a0);
			append(a0, t17);
			append(p5, t18);
			insert(target, t19, anchor);
			insert(target, p6, anchor);
			append(p6, t20);
			insert(target, t21, anchor);
			insert(target, p7, anchor);
			append(p7, t22);
			insert(target, t23, anchor);
			insert(target, p8, anchor);
			append(p8, t24);
			insert(target, t25, anchor);
			insert(target, p9, anchor);
			append(p9, t26);
			insert(target, t27, anchor);
			insert(target, p10, anchor);
			append(p10, t28);
			insert(target, t29, anchor);
			insert(target, p11, anchor);
			append(p11, t30);
			insert(target, t31, anchor);
			insert(target, hr1, anchor);
			insert(target, t32, anchor);
			insert(target, h22, anchor);
			append(h22, t33);
			insert(target, t34, anchor);
			insert(target, p12, anchor);
			append(p12, t35);
			insert(target, t36, anchor);
			insert(target, p13, anchor);
			append(p13, t37);
			insert(target, t38, anchor);
			insert(target, p14, anchor);
			append(p14, t39);
			append(p14, a1);
			append(a1, t40);
			append(p14, t41);
			insert(target, t42, anchor);
			insert(target, hr2, anchor);
			insert(target, t43, anchor);
			insert(target, h23, anchor);
			append(h23, t44);
			insert(target, t45, anchor);
			insert(target, p15, anchor);
			append(p15, t46);
			append(p15, br0);
			append(p15, t47);
			append(p15, br1);
			append(p15, t48);
			insert(target, t49, anchor);
			insert(target, p16, anchor);
			append(p16, t50);
			append(p16, a2);
			append(a2, t51);
			append(p16, t52);
			insert(target, t53, anchor);
			insert(target, hr3, anchor);
			insert(target, t54, anchor);
			insert(target, h24, anchor);
			append(h24, t55);
			insert(target, t56, anchor);
			insert(target, p17, anchor);
			append(p17, t57);
			insert(target, t58, anchor);
			insert(target, p18, anchor);
			append(p18, t59);
			append(p18, a3);
			append(a3, t60);
			append(p18, t61);
			append(p18, a4);
			append(a4, t62);
			append(p18, t63);
			insert(target, t64, anchor);
			insert(target, hr4, anchor);
			insert(target, t65, anchor);
			insert(target, h25, anchor);
			append(h25, t66);
			insert(target, t67, anchor);
			insert(target, p19, anchor);
			append(p19, t68);
			insert(target, t69, anchor);
			insert(target, img0, anchor);
			insert(target, t70, anchor);
			insert(target, img1, anchor);
			insert(target, t71, anchor);
			insert(target, img2, anchor);
			insert(target, t72, anchor);
			insert(target, img3, anchor);
			insert(target, t73, anchor);
			insert(target, img4, anchor);
			insert(target, t74, anchor);
			insert(target, p20, anchor);
			append(p20, t75);
			append(p20, a5);
			append(a5, t76);
			append(p20, t77);
			insert(target, t78, anchor);
			insert(target, br2, anchor);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(t0);
			if (detaching) detach(h20);
			if (detaching) detach(t2);
			if (detaching) detach(p0);
			if (detaching) detach(t4);
			if (detaching) detach(p1);
			if (detaching) detach(t6);
			if (detaching) detach(p2);
			if (detaching) detach(t8);
			if (detaching) detach(hr0);
			if (detaching) detach(t9);
			if (detaching) detach(h21);
			if (detaching) detach(t11);
			if (detaching) detach(p3);
			if (detaching) detach(t13);
			if (detaching) detach(p4);
			if (detaching) detach(t15);
			if (detaching) detach(p5);
			if (detaching) detach(t19);
			if (detaching) detach(p6);
			if (detaching) detach(t21);
			if (detaching) detach(p7);
			if (detaching) detach(t23);
			if (detaching) detach(p8);
			if (detaching) detach(t25);
			if (detaching) detach(p9);
			if (detaching) detach(t27);
			if (detaching) detach(p10);
			if (detaching) detach(t29);
			if (detaching) detach(p11);
			if (detaching) detach(t31);
			if (detaching) detach(hr1);
			if (detaching) detach(t32);
			if (detaching) detach(h22);
			if (detaching) detach(t34);
			if (detaching) detach(p12);
			if (detaching) detach(t36);
			if (detaching) detach(p13);
			if (detaching) detach(t38);
			if (detaching) detach(p14);
			if (detaching) detach(t42);
			if (detaching) detach(hr2);
			if (detaching) detach(t43);
			if (detaching) detach(h23);
			if (detaching) detach(t45);
			if (detaching) detach(p15);
			if (detaching) detach(t49);
			if (detaching) detach(p16);
			if (detaching) detach(t53);
			if (detaching) detach(hr3);
			if (detaching) detach(t54);
			if (detaching) detach(h24);
			if (detaching) detach(t56);
			if (detaching) detach(p17);
			if (detaching) detach(t58);
			if (detaching) detach(p18);
			if (detaching) detach(t64);
			if (detaching) detach(hr4);
			if (detaching) detach(t65);
			if (detaching) detach(h25);
			if (detaching) detach(t67);
			if (detaching) detach(p19);
			if (detaching) detach(t69);
			if (detaching) detach(img0);
			if (detaching) detach(t70);
			if (detaching) detach(img1);
			if (detaching) detach(t71);
			if (detaching) detach(img2);
			if (detaching) detach(t72);
			if (detaching) detach(img3);
			if (detaching) detach(t73);
			if (detaching) detach(img4);
			if (detaching) detach(t74);
			if (detaching) detach(p20);
			if (detaching) detach(t78);
			if (detaching) detach(br2);
		}
	};
}

class Policies extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Policies;
